#include <stdio.h>
#include <stdlib.h>
#include <time.h>

#ifdef _WIN32
#include <conio.h>
#else
#include <unistd.h>
#include <termios.h>

int kbhit() {
    struct termios oldt, newt;
    int ch, oldf;
    tcgetattr(STDIN_FILENO, &oldt);
    newt = oldt;
    newt.c_lflag &= ~(ICANON | ECHO);
    tcsetattr(STDIN_FILENO, TCSANOW, &newt);
    oldf = fcntl(STDIN_FILENO, F_GETFL, 0);
    fcntl(STDIN_FILENO, F_SETFL, oldf | O_NONBLOCK);
    ch = getchar();
    tcsetattr(STDIN_FILENO, TCSANOW, &oldt);
    fcntl(STDIN_FILENO, F_SETFL, oldf);
    if (ch != EOF) {
        ungetc(ch, stdin);
        return 1;
    }
    return 0;
}
#endif

const int largura = 20;
const int altura = 10;
bool fimDeJogo;
int pontos;
int caldaX[100], caldaY[100];
int nCalda;
int x, y, frutaX, frutaY;

enum eDirecao { PARADO = 0, ESQUERDA, DIREITA, CIMA, BAIXO };
eDirecao direcao;

void Configurar()
{
    fimDeJogo = false;
    direcao = PARADO;
    x = largura / 2;
    y = altura / 2;
    frutaX = rand() % largura;
    frutaY = rand() % altura;
    pontos = 0;
}

void Desenhar()
{
    system("cls");
    for (int i = 0; i < largura + 2; i++)
        printf("#");
    printf("\n");

    for (int i = 0; i < altura; i++)
    {
        for (int j = 0; j < largura; j++)
        {
            if (j == 0)
                printf("#");
            if (i == y && j == x)
                printf("O");
            else if (i == frutaY && j == frutaX)
                printf("F");
            else
            {
                bool imprimirCalda = false;
                for (int k = 0; k < nCalda; k++)
                {
                    if (caldaX[k] == j && caldaY[k] == i)
                    {
                        printf("o");
                        imprimirCalda = true;
                    }
                }
                if (!imprimirCalda)
                    printf(" ");
            }

            if (j == largura - 1)
                printf("#");
        }
        printf("\n");
    }

    for (int i = 0; i < largura + 2; i++)
        printf("#");
    printf("\n");

    printf("Pontuacao: %d\n", pontos);
}

void Entrada()
{
    if (kbhit())
    {
        switch (getchar())
        {
        case 'a':
            direcao = ESQUERDA;
            break;
        case 'd':
            direcao = DIREITA;
            break;
        case 'w':
            direcao = CIMA;
            break;
        case 's':
            direcao = BAIXO;
            break;
        case 'x':
            fimDeJogo = true;
            break;
        }
    }
}

void Logica()
{
    int prevX = caldaX[0];
    int prevY = caldaY[0];
    int prev2X, prev2Y;
    caldaX[0] = x;
    caldaY[0] = y;

    for (int i = 1; i < nCalda; i++)
    {
        prev2X = caldaX[i];
        prev2Y = caldaY[i];
        caldaX[i] = prevX;
        caldaY[i] = prevY;
        prevX = prev2X;
        prevY = prev2Y;
    }

    switch (direcao)
    {
    case ESQUERDA:
        x--;
        break;
    case DIREITA:
        x++;
        break;
    case CIMA:
        y--;
        break;
    case BAIXO:
        y++;
        break;
    default:
        break;
    }

    if (x >= largura) x = 0; else if (x < 0) x = largura - 1;
    if (y >= altura) y = 0; else if (y < 0) y = altura - 1;

    if (x == frutaX && y == frutaY)
    {
        pontos += 10;
        frutaX = rand() % largura;
        frutaY = rand() % altura;
        nCalda++;
    }

    for (int i = 0; i < nCalda; i++)
    {
        if (caldaX[i] == x && caldaY[i] == y)
            fimDeJogo = true;
    }
}

void Instrucoes()
{
    system("cls");
    printf("==== INSTRUCOES ====\n");
    printf("Use as teclas WASD para mover a cobra.\n");
    printf("O objetivo e comer a fruta (F) para aumentar a pontuacao.\n");
    printf("Evite colidir com as bordas (#) ou a propria calda (o).\n");
    printf("Pressione X para sair do jogo.\n");
    printf("====================\n");
    printf("Pressione qualquer tecla para voltar ao menu...");
    system("pause");
    getchar(); 
}

int main()
{
    srand(time(NULL));
    int opcao;
    do {
        system("cls");
        printf("==== MENU ====\n");
        printf("1. Jogar\n");
        printf("2. Instrucoes\n");
        printf("3. Sair\n");
        printf("==============\n");
        printf("Digite o numero da opcao desejada: ");
        scanf("%d", &opcao);

        switch (opcao) {
            case 1:
                Configurar();
                while (!fimDeJogo)
                {
                    Desenhar();
                    Entrada();
                    Logica();
                }
                break;
            case 2:
                Instrucoes();
                break;
            case 3:
                printf("Obrigado por jogar! Ate a proxima!\n");
                return 0;
            default:
                printf("Opcao invalida! Digite um numero valido.\n");
                break;
        }
    } while (opcao != 3);

    return 0;
}
